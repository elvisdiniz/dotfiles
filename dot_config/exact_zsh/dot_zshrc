# make sure the re_match_pcre option is enabled in FreeBSD systems
# the precompiled version of zsh does not use pcre, needs to build and compile with the module:
# 
# how to build a a package from ports: https://www.cyberciti.biz/faq/install-ports-in-freebsd/
# zvm bug: https://github.com/jeffreytse/zsh-vi-mode/issues/159
if [ "$options[re_match_pcre]" = "off" ] && [ -f /usr/local/lib/zsh/5.9/zsh/pcre.so ] && [ $(uname -s) = "FreeBSD" ] ; then
    setopt re_match_pcre
fi
######################################################################################################################

$HOME/.local/scripts/create_bin_symlinks.sh

source "${XDG_CONFIG_HOME:-$HOME/.config}/shell/init.sh"

# history setup
HISTFILE="${ZSH_STATE_HOME}/history"
SAVEHIST=50000
HISTSIZE=50000
setopt share_history 
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_verify

# install, if not installed yet, and source zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# load/install zinit plugins
# install fzf related plugins only if fzf is available
if [ -x "$(command -v fzf)" ]; then
    export FZF_DEFAULT_OPTS=" \
    --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
    --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
    --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8"
    export FZF_TMUX_OPTS="--height 40% --tmux bottom,40% --layout reverse --border top"

    zinit light Aloxaf/fzf-tab
    zinit light Freed-Wu/fzf-tab-source

    # Configure fzf-tab
    # disable sort when completing `git checkout`
    zstyle ':completion:*:git-checkout:*' sort false
    # set descriptions format to enable group support
    # NOTE: don't use escape sequences here, fzf-tab will ignore them
    zstyle ':completion:*:descriptions' format '[%d]'
    # set list-colors to enable filename colorizing
    zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
    # force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
    zstyle ':completion:*' menu no
    # preview command for fzf-tab
    zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'
    export LESSOPEN="|~/.local/scripts/lessfilter.sh %s"

    zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'
    zstyle ':fzf-tab:complete:ssh:*' fzf-preview 'ping -c 4 $word'
    zstyle ':fzf-tab:complete:tldr:*' fzf-preview 'tldr --color always $word'

    # switch group using `<` and `>`
    zstyle ':fzf-tab:*' switch-group '<' '>'

    # For postponing loading `fzf`
    zinit ice lucid wait
    zinit snippet OMZP::fzf
fi
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting

# don't load zsh-vi-mode plugin if zsh don't have pcre module on freebsd
if [ $(uname -s) != "FreeBSD" ] || [ "$options[re_match_pcre]" = "on" ]; then
    zinit ice depth=1
    zinit light jeffreytse/zsh-vi-mode
    ZVM_INSERT_MODE_CURSOR=$ZVM_CURSOR_BLINKING_BEAM
else
    # fallback to zsh built in vi mode and enable OMZ vi-mode plugin
    VI_MODE_SET_CURSOR=true
    VI_MODE_CURSOR_INSERT=5
    bindkey '^f' autosuggest-accept
    zinit snippet OMZP::vi-mode/vi-mode.plugin.zsh
fi

# load/install Oh My Zsh plugins
zinit snippet OMZP::sudo/sudo.plugin.zsh

if [ -d /home/linuxbrew/.linuxbrew/share/zsh/site-functions ]; then
    zinit add-fpath /home/linuxbrew/.linuxbrew/share/zsh/site-functions/
fi

if [[ $(command -v asdf) == $HOME/.local/bin/asdf ]]; then
    if [ ! -f "${ASDF_DATA_DIR:-$HOME/.asdf}/completions/_asdf" ]; then
        mkdir -p "${ASDF_DATA_DIR:-$HOME/.asdf}/completions"
        asdf completion zsh > "${ASDF_DATA_DIR:-$HOME/.asdf}/completions/_asdf"
    fi
    zinit add-fpath ${ASDF_DATA_DIR:-$HOME/.asdf}/completions
fi

# souce .zsh/*.zsh files
[[ ! -f $ZDOTDIR/keybindings.zsh ]] || source $ZDOTDIR/keybindings.zsh

# compinit
autoload -U compinit
zstyle ':completion:*' cache-path "${XDG_CACHE_HOME:-${HOME}/.cache}/zsh/zcompcache"
compinit -d "${XDG_CACHE_HOME:-${HOME}/.cache}/zsh/zcompdump-${ZSH_VERSION}"

[[ ! -x "$(command -v zoxide)" ]] || eval "$(zoxide init --cmd cd zsh)"

$SCRIPTS_HOME/install_chezmoi.sh
[[ -x $BIN_HOME/chezmoi ]] && eval "$(chezmoi completion zsh)"

$SCRIPTS_HOME/install_starship.sh
[[ -x $BIN_HOME/starship ]] && eval "$(starship completions zsh)"

# create starship prompt
eval "$(starship init zsh)"
